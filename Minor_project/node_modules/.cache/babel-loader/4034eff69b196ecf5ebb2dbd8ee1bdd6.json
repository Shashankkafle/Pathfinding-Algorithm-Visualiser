{"ast":null,"code":"export function unweightedSearchAlgorithm(grid, startNode, finishNode) {\n  const queue = [];\n  const visitedNodesInOrder = [];\n  startNode.isVisited = true;\n  queue.push(startNode);\n\n  while (queue.length > 0) {\n    let node = queue.shift();\n    if (finishNode === node) return visitedNodesInOrder;\n    if (node.isWall) continue;\n    const neighbors = getUnvisitedNeighbors(grid, node);\n\n    for (let i = 0; i < neighbors.length; i++) {\n      let neighbor = neighbors[i];\n      neighbor.isVisited = true;\n      neighbor.previousNode = node;\n      visitedNodesInOrder.push(neighbor);\n      queue.push(neighbor);\n    }\n  }\n\n  return visitedNodesInOrder;\n}\n\nfunction getUnvisitedNeighbors(grid, node) {\n  const ROWS = grid.length;\n  const COLS = grid[0].length;\n  const {\n    row,\n    col\n  } = node;\n  const neighbors = [];\n\n  if (row + 1 >= 0 && row + 1 < ROWS && col >= 0 && col < COLS && !grid[row + 1][col].isVisited && !grid[row + 1][col].isWall) {\n    neighbors.push(grid[row + 1][col]);\n  }\n\n  if (row - 1 >= 0 && row - 1 < ROWS && col >= 0 && col < COLS && !grid[row - 1][col].isWall && !grid[row - 1][col].isVisited) {\n    neighbors.push(grid[row - 1][col]);\n  }\n\n  if (row >= 0 && row < ROWS && col - 1 >= 0 && col - 1 < COLS && !grid[row][col - 1].isWall && !grid[row][col - 1].isVisited) {\n    neighbors.push(grid[row][col - 1]);\n  }\n\n  if (row >= 0 && row < ROWS && col + 1 >= 0 && col + 1 < COLS && !grid[row][col + 1].isWall && !grid[row][col + 1].isVisited) {\n    neighbors.push(grid[row][col + 1]);\n  }\n\n  return neighbors;\n}","map":{"version":3,"sources":["/Users/sankalpapokhrel/Documents/Pathfinding-Algorithm-Visualiser/Minor_project/src/Algorithms/BFS.jsx"],"names":["unweightedSearchAlgorithm","grid","startNode","finishNode","queue","visitedNodesInOrder","isVisited","push","length","node","shift","isWall","neighbors","getUnvisitedNeighbors","i","neighbor","previousNode","ROWS","COLS","row","col"],"mappings":"AAAA,OAAO,SAASA,yBAAT,CAAmCC,IAAnC,EAAyCC,SAAzC,EAAoDC,UAApD,EAAgE;AACrE,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,mBAAmB,GAAG,EAA5B;AAEAH,EAAAA,SAAS,CAACI,SAAV,GAAsB,IAAtB;AACAF,EAAAA,KAAK,CAACG,IAAN,CAAWL,SAAX;;AAEA,SAAOE,KAAK,CAACI,MAAN,GAAe,CAAtB,EAAyB;AACvB,QAAIC,IAAI,GAAGL,KAAK,CAACM,KAAN,EAAX;AAEA,QAAIP,UAAU,KAAKM,IAAnB,EAAyB,OAAOJ,mBAAP;AAEzB,QAAII,IAAI,CAACE,MAAT,EAAiB;AAEjB,UAAMC,SAAS,GAAGC,qBAAqB,CAACZ,IAAD,EAAOQ,IAAP,CAAvC;;AAEA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACJ,MAA9B,EAAsCM,CAAC,EAAvC,EAA2C;AACzC,UAAIC,QAAQ,GAAGH,SAAS,CAACE,CAAD,CAAxB;AACAC,MAAAA,QAAQ,CAACT,SAAT,GAAqB,IAArB;AACAS,MAAAA,QAAQ,CAACC,YAAT,GAAwBP,IAAxB;AACAJ,MAAAA,mBAAmB,CAACE,IAApB,CAAyBQ,QAAzB;AACAX,MAAAA,KAAK,CAACG,IAAN,CAAWQ,QAAX;AACD;AACF;;AAED,SAAOV,mBAAP;AACD;;AAED,SAASQ,qBAAT,CAA+BZ,IAA/B,EAAqCQ,IAArC,EAA2C;AACzC,QAAMQ,IAAI,GAAGhB,IAAI,CAACO,MAAlB;AACA,QAAMU,IAAI,GAAGjB,IAAI,CAAC,CAAD,CAAJ,CAAQO,MAArB;AAEA,QAAM;AAAEW,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAeX,IAArB;AACA,QAAMG,SAAS,GAAG,EAAlB;;AAEA,MACEO,GAAG,GAAG,CAAN,IAAW,CAAX,IACAA,GAAG,GAAG,CAAN,GAAUF,IADV,IAEAG,GAAG,IAAI,CAFP,IAGAA,GAAG,GAAGF,IAHN,IAIA,CAACjB,IAAI,CAACkB,GAAG,GAAG,CAAP,CAAJ,CAAcC,GAAd,EAAmBd,SAJpB,IAKA,CAACL,IAAI,CAACkB,GAAG,GAAG,CAAP,CAAJ,CAAcC,GAAd,EAAmBT,MANtB,EAOE;AACAC,IAAAA,SAAS,CAACL,IAAV,CAAeN,IAAI,CAACkB,GAAG,GAAG,CAAP,CAAJ,CAAcC,GAAd,CAAf;AACD;;AACD,MACED,GAAG,GAAG,CAAN,IAAW,CAAX,IACAA,GAAG,GAAG,CAAN,GAAUF,IADV,IAEAG,GAAG,IAAI,CAFP,IAGAA,GAAG,GAAGF,IAHN,IAIA,CAACjB,IAAI,CAACkB,GAAG,GAAG,CAAP,CAAJ,CAAcC,GAAd,EAAmBT,MAJpB,IAKA,CAACV,IAAI,CAACkB,GAAG,GAAG,CAAP,CAAJ,CAAcC,GAAd,EAAmBd,SANtB,EAOE;AACAM,IAAAA,SAAS,CAACL,IAAV,CAAeN,IAAI,CAACkB,GAAG,GAAG,CAAP,CAAJ,CAAcC,GAAd,CAAf;AACD;;AACD,MACED,GAAG,IAAI,CAAP,IACAA,GAAG,GAAGF,IADN,IAEAG,GAAG,GAAG,CAAN,IAAW,CAFX,IAGAA,GAAG,GAAG,CAAN,GAAUF,IAHV,IAIA,CAACjB,IAAI,CAACkB,GAAD,CAAJ,CAAUC,GAAG,GAAG,CAAhB,EAAmBT,MAJpB,IAKA,CAACV,IAAI,CAACkB,GAAD,CAAJ,CAAUC,GAAG,GAAG,CAAhB,EAAmBd,SANtB,EAOE;AACAM,IAAAA,SAAS,CAACL,IAAV,CAAeN,IAAI,CAACkB,GAAD,CAAJ,CAAUC,GAAG,GAAG,CAAhB,CAAf;AACD;;AACD,MACED,GAAG,IAAI,CAAP,IACAA,GAAG,GAAGF,IADN,IAEAG,GAAG,GAAG,CAAN,IAAW,CAFX,IAGAA,GAAG,GAAG,CAAN,GAAUF,IAHV,IAIA,CAACjB,IAAI,CAACkB,GAAD,CAAJ,CAAUC,GAAG,GAAG,CAAhB,EAAmBT,MAJpB,IAKA,CAACV,IAAI,CAACkB,GAAD,CAAJ,CAAUC,GAAG,GAAG,CAAhB,EAAmBd,SANtB,EAOE;AACAM,IAAAA,SAAS,CAACL,IAAV,CAAeN,IAAI,CAACkB,GAAD,CAAJ,CAAUC,GAAG,GAAG,CAAhB,CAAf;AACD;;AAED,SAAOR,SAAP;AACD","sourcesContent":["export function unweightedSearchAlgorithm(grid, startNode, finishNode) {\n  const queue = [];\n  const visitedNodesInOrder = [];\n\n  startNode.isVisited = true;\n  queue.push(startNode);\n\n  while (queue.length > 0) {\n    let node = queue.shift();\n\n    if (finishNode === node) return visitedNodesInOrder;\n\n    if (node.isWall) continue;\n\n    const neighbors = getUnvisitedNeighbors(grid, node);\n\n    for (let i = 0; i < neighbors.length; i++) {\n      let neighbor = neighbors[i];\n      neighbor.isVisited = true;\n      neighbor.previousNode = node;\n      visitedNodesInOrder.push(neighbor);\n      queue.push(neighbor);\n    }\n  }\n\n  return visitedNodesInOrder;\n}\n\nfunction getUnvisitedNeighbors(grid, node) {\n  const ROWS = grid.length;\n  const COLS = grid[0].length;\n\n  const { row, col } = node;\n  const neighbors = [];\n\n  if (\n    row + 1 >= 0 &&\n    row + 1 < ROWS &&\n    col >= 0 &&\n    col < COLS &&\n    !grid[row + 1][col].isVisited &&\n    !grid[row + 1][col].isWall\n  ) {\n    neighbors.push(grid[row + 1][col]);\n  }\n  if (\n    row - 1 >= 0 &&\n    row - 1 < ROWS &&\n    col >= 0 &&\n    col < COLS &&\n    !grid[row - 1][col].isWall &&\n    !grid[row - 1][col].isVisited\n  ) {\n    neighbors.push(grid[row - 1][col]);\n  }\n  if (\n    row >= 0 &&\n    row < ROWS &&\n    col - 1 >= 0 &&\n    col - 1 < COLS &&\n    !grid[row][col - 1].isWall &&\n    !grid[row][col - 1].isVisited\n  ) {\n    neighbors.push(grid[row][col - 1]);\n  }\n  if (\n    row >= 0 &&\n    row < ROWS &&\n    col + 1 >= 0 &&\n    col + 1 < COLS &&\n    !grid[row][col + 1].isWall &&\n    !grid[row][col + 1].isVisited\n  ) {\n    neighbors.push(grid[row][col + 1]);\n  }\n\n  return neighbors;\n}\n"]},"metadata":{},"sourceType":"module"}