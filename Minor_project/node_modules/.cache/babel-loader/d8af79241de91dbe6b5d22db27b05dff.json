{"ast":null,"code":"// export function createMaze(grid)\n//     {\n//         const newGrid=grid\n//         for(var i=0;i<newGrid.length;(i=i+2))\n//         {\n//             for(var j=0;j<newGrid[i].length;j++)\n//             {\n//                     newGrid.isWall=true\n//                     console.log( newGrid.isWall+' '+i+' '+j)\n//             }\n//             const rand=Math.floor(Math.random()*newGrid[i].length) //generate random num betn 0 and newGrid[i].length\n//             newGrid.isWall=false\n//         }\n//         return newGrid\n//     }\nexport function createMaze(grid) {\n  const newGrid = grid;\n\n  for (var i = 0; i < grid.length; i++) {\n    for (var j = 0; j < newGrid[i].length; j++) {\n      if (Math.random() < 0.2) {\n        newGrid[i][j].isWall = true;\n      }\n    }\n  }\n\n  return newGrid;\n}","map":{"version":3,"sources":["E:/minor project/Pathfinding-Algorithm-visualiser/Minor_project/src/obstacles/Maze.jsx"],"names":["createMaze","grid","newGrid","i","length","j","Math","random","isWall"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA,OAAO,SAASA,UAAT,CAAoBC,IAApB,EACP;AACI,QAAMC,OAAO,GAACD,IAAd;;AACA,OAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,IAAI,CAACG,MAAnB,EAA0BD,CAAC,EAA3B,EACA;AACE,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,OAAO,CAACC,CAAD,CAAP,CAAWC,MAAzB,EAAgCC,CAAC,EAAjC,EACA;AACE,UAAIC,IAAI,CAACC,MAAL,EAAD,GAAgB,GAAnB,EACA;AACEL,QAAAA,OAAO,CAACC,CAAD,CAAP,CAAWE,CAAX,EAAcG,MAAd,GAAsB,IAAtB;AACD;AACF;AAEF;;AACD,SAAON,OAAP;AACH","sourcesContent":["// export function createMaze(grid)\r\n//     {\r\n//         const newGrid=grid\r\n//         for(var i=0;i<newGrid.length;(i=i+2))\r\n//         {\r\n//             for(var j=0;j<newGrid[i].length;j++)\r\n//             {\r\n                \r\n                \r\n//                     newGrid.isWall=true\r\n//                     console.log( newGrid.isWall+' '+i+' '+j)\r\n                    \r\n            \r\n                \r\n//             }\r\n//             const rand=Math.floor(Math.random()*newGrid[i].length) //generate random num betn 0 and newGrid[i].length\r\n//             newGrid.isWall=false\r\n            \r\n//         }\r\n//         return newGrid\r\n//     }\r\n\r\nexport function createMaze(grid)\r\n{\r\n    const newGrid=grid\r\n    for(var i=0;i<grid.length;i++)\r\n    {\r\n      for(var j=0;j<newGrid[i].length;j++)\r\n      {\r\n        if((Math.random())<0.2)\r\n        {\r\n          newGrid[i][j].isWall= true\r\n        }\r\n      }\r\n     \r\n    }\r\n    return newGrid;\r\n}"]},"metadata":{},"sourceType":"module"}