{"ast":null,"code":"export function generateWall1(grid) {\n  const newGrid = grid;\n\n  for (var i = 0; i < newGrid.length; i++) {\n    for (var j = 0; j < newGrid[i].length; j++) {\n      if (Math.random() < 0.1) {\n        newGrid[i][j].isWall = true;\n      }\n    }\n  }\n\n  return newGrid;\n}\nexport function generateWall2(grid) {\n  const newGrid = grid;\n\n  for (var i = 0; i < grid.length; i++) {\n    for (var j = 0; j < newGrid[i].length; j++) {\n      if (Math.random() < 0.2) {\n        newGrid[i][j].isWall = true;\n      }\n    }\n  }\n\n  return newGrid;\n}\nexport function generateWall3(grid) {\n  const newGrid = grid;\n\n  for (var i = 0; i < newGrid.length; i++) {\n    for (var j = 0; j < grid[i].length; j++) {\n      if (Math.random() < 0.3) {\n        newGrid[i][j].isWall = true;\n      }\n    }\n  }\n\n  return newGrid;\n}","map":{"version":3,"sources":["W:/Pathfinding-Algorithm-Visualiser/Minor_project/src/obstacles/RandomWalls.jsx"],"names":["generateWall1","grid","newGrid","i","length","j","Math","random","isWall","generateWall2","generateWall3"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,QAAMC,OAAO,GAAGD,IAAhB;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACC,CAAD,CAAP,CAAWC,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAC1C,UAAIC,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBL,QAAAA,OAAO,CAACC,CAAD,CAAP,CAAWE,CAAX,EAAcG,MAAd,GAAuB,IAAvB;AACD;AACF;AACF;;AACD,SAAON,OAAP;AACD;AAED,OAAO,SAASO,aAAT,CAAuBR,IAAvB,EAA6B;AAClC,QAAMC,OAAO,GAAGD,IAAhB;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACC,CAAD,CAAP,CAAWC,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;AAC1C,UAAIC,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBL,QAAAA,OAAO,CAACC,CAAD,CAAP,CAAWE,CAAX,EAAcG,MAAd,GAAuB,IAAvB;AACD;AACF;AACF;;AACD,SAAON,OAAP;AACD;AAED,OAAO,SAASQ,aAAT,CAAuBT,IAAvB,EAA6B;AAClC,QAAMC,OAAO,GAAGD,IAAhB;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACE,CAAD,CAAJ,CAAQC,MAA5B,EAAoCC,CAAC,EAArC,EAAyC;AACvC,UAAIC,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBL,QAAAA,OAAO,CAACC,CAAD,CAAP,CAAWE,CAAX,EAAcG,MAAd,GAAuB,IAAvB;AACD;AACF;AACF;;AACD,SAAON,OAAP;AACD","sourcesContent":["export function generateWall1(grid) {\r\n  const newGrid = grid;\r\n  for (var i = 0; i < newGrid.length; i++) {\r\n    for (var j = 0; j < newGrid[i].length; j++) {\r\n      if (Math.random() < 0.1) {\r\n        newGrid[i][j].isWall = true;\r\n      }\r\n    }\r\n  }\r\n  return newGrid;\r\n}\r\n\r\nexport function generateWall2(grid) {\r\n  const newGrid = grid;\r\n  for (var i = 0; i < grid.length; i++) {\r\n    for (var j = 0; j < newGrid[i].length; j++) {\r\n      if (Math.random() < 0.2) {\r\n        newGrid[i][j].isWall = true;\r\n      }\r\n    }\r\n  }\r\n  return newGrid;\r\n}\r\n\r\nexport function generateWall3(grid) {\r\n  const newGrid = grid;\r\n  for (var i = 0; i < newGrid.length; i++) {\r\n    for (var j = 0; j < grid[i].length; j++) {\r\n      if (Math.random() < 0.3) {\r\n        newGrid[i][j].isWall = true;\r\n      }\r\n    }\r\n  }\r\n  return newGrid;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}