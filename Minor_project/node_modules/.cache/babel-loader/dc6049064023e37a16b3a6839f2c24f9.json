{"ast":null,"code":"export function generateWall1(grid) {\n  const newGrid = grid;\n\n  for (var i = 0; i < newGrid.length; i++) {\n    for (var j = 0; j < newGrid[i].length; j++) {\n      if (Math.random() < 0.1) {\n        newGrid[i][j].isWall = true;\n      }\n    }\n  }\n\n  return newGrid;\n}\nexport function generateWall2(grid) {\n  const newGrid = grid;\n\n  for (var i = 0; i < grid.length; i++) {\n    for (var j = 0; j < newGrid[i].length; j++) {\n      if (Math.random() < 0.2) {\n        newGrid[i][j].isWall = true;\n      }\n    }\n  }\n\n  return newGrid;\n}\nexport function generateWall3(grid) {\n  const newGrid = grid;\n\n  for (var i = 0; i < newGrid.length; i++) {\n    for (var j = 0; j < grid[i].length; j++) {\n      if (Math.random() < 0.3) {\n        newGrid[i][j].isWall = true;\n      }\n    }\n  }\n\n  return newGrid;\n}","map":{"version":3,"sources":["C:/Users/Acer/Pathfinding-Algorithm-Visualiser/Minor_project/src/obstacles/RandomWalls.jsx"],"names":["generateWall1","grid","newGrid","i","length","j","Math","random","isWall","generateWall2","generateWall3"],"mappings":"AAAE,OAAQ,SAASA,aAAT,CAAuBC,IAAvB,EACR;AACE,QAAMC,OAAO,GAACD,IAAd;;AACA,OAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,OAAO,CAACE,MAAtB,EAA6BD,CAAC,EAA9B,EACA;AACE,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,OAAO,CAACC,CAAD,CAAP,CAAWC,MAAzB,EAAgCC,CAAC,EAAjC,EACA;AACE,UAAIC,IAAI,CAACC,MAAL,EAAD,GAAgB,GAAnB,EACA;AACEL,QAAAA,OAAO,CAACC,CAAD,CAAP,CAAWE,CAAX,EAAcG,MAAd,GAAsB,IAAtB;AACD;AAEF;AACF;;AACF,SAAON,OAAP;AACA;AAED,OAAQ,SAASO,aAAT,CAAuBR,IAAvB,EACR;AACE,QAAMC,OAAO,GAACD,IAAd;;AACA,OAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,IAAI,CAACG,MAAnB,EAA0BD,CAAC,EAA3B,EACA;AACE,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,OAAO,CAACC,CAAD,CAAP,CAAWC,MAAzB,EAAgCC,CAAC,EAAjC,EACA;AACE,UAAIC,IAAI,CAACC,MAAL,EAAD,GAAgB,GAAnB,EACA;AACEL,QAAAA,OAAO,CAACC,CAAD,CAAP,CAAWE,CAAX,EAAcG,MAAd,GAAsB,IAAtB;AACD;AACF;AACF;;AACF,SAAON,OAAP;AACA;AAED,OAAQ,SAASQ,aAAT,CAAuBT,IAAvB,EACR;AACE,QAAMC,OAAO,GAACD,IAAd;;AACA,OAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,OAAO,CAACE,MAAtB,EAA6BD,CAAC,EAA9B,EACA;AACE,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,IAAI,CAACE,CAAD,CAAJ,CAAQC,MAAtB,EAA6BC,CAAC,EAA9B,EACA;AACE,UAAIC,IAAI,CAACC,MAAL,EAAD,GAAgB,GAAnB,EACA;AACEL,QAAAA,OAAO,CAACC,CAAD,CAAP,CAAWE,CAAX,EAAcG,MAAd,GAAsB,IAAtB;AACD;AACF;AACF;;AACF,SAAON,OAAP;AACA","sourcesContent":["  export  function generateWall1(grid)\r\n  {\r\n    const newGrid=grid\r\n    for(var i=0;i<newGrid.length;i++)\r\n    {\r\n      for(var j=0;j<newGrid[i].length;j++)\r\n      {\r\n        if((Math.random())<0.1)\r\n        {\r\n          newGrid[i][j].isWall= true\r\n        }\r\n        \r\n      }\r\n    }\r\n   return newGrid\r\n  }\r\n  \r\n  export  function generateWall2(grid)\r\n  {\r\n    const newGrid=grid\r\n    for(var i=0;i<grid.length;i++)\r\n    {\r\n      for(var j=0;j<newGrid[i].length;j++)\r\n      {\r\n        if((Math.random())<0.2)\r\n        {\r\n          newGrid[i][j].isWall= true\r\n        }\r\n      }\r\n    }\r\n   return newGrid\r\n  }\r\n\r\n  export  function generateWall3(grid)\r\n  {\r\n    const newGrid=grid\r\n    for(var i=0;i<newGrid.length;i++)\r\n    {\r\n      for(var j=0;j<grid[i].length;j++)\r\n      {\r\n        if((Math.random())<0.3)\r\n        {\r\n          newGrid[i][j].isWall= true\r\n        }\r\n      }\r\n    }\r\n   return newGrid\r\n  }"]},"metadata":{},"sourceType":"module"}