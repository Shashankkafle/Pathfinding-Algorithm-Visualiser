{"ast":null,"code":"export function createMaze(grid) {\n  const newGrid = grid;\n\n  for (var i = 0; i < newGrid.length; i = i + 2) {\n    for (var j = 0; j < newGrid[i].length; j++) {\n      newGrid.isWall = true;\n      console.log(newGrid.isWall + ' ' + i + ' ' + j);\n    }\n\n    const rand = Math.floor(Math.random() * newGrid[i].length); //generate random num betn 0 and newGrid[i].length\n\n    newGrid.isWall = false;\n  }\n\n  return newGrid;\n}\nexport function createMaze1(grid) {\n  const newGrid = grid;\n\n  for (var i = 0; i < grid.length; i++) {\n    for (var j = 0; j < newGrid[i].length; j++) {\n      if (Math.random() < 0.2) {\n        newGrid[i][j].isWall = true;\n      }\n    }\n  }\n}","map":{"version":3,"sources":["E:/minor project/Pathfinding-Algorithm-visualiser/Minor_project/src/obstacles/Maze.jsx"],"names":["createMaze","grid","newGrid","i","length","j","isWall","console","log","rand","Math","floor","random","createMaze1"],"mappings":"AAAA,OAAO,SAASA,UAAT,CAAoBC,IAApB,EACH;AACI,QAAMC,OAAO,GAACD,IAAd;;AACA,OAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,OAAO,CAACE,MAAtB,EAA8BD,CAAC,GAACA,CAAC,GAAC,CAAlC,EACA;AACI,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,OAAO,CAACC,CAAD,CAAP,CAAWC,MAAzB,EAAgCC,CAAC,EAAjC,EACA;AAGQH,MAAAA,OAAO,CAACI,MAAR,GAAe,IAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAaN,OAAO,CAACI,MAAR,GAAe,GAAf,GAAmBH,CAAnB,GAAqB,GAArB,GAAyBE,CAAtC;AAIP;;AACD,UAAMI,IAAI,GAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcV,OAAO,CAACC,CAAD,CAAP,CAAWC,MAApC,CAAX,CAXJ,CAW2D;;AACvDF,IAAAA,OAAO,CAACI,MAAR,GAAe,KAAf;AAEH;;AACD,SAAOJ,OAAP;AACH;AAEL,OAAO,SAASW,WAAT,CAAqBZ,IAArB,EACP;AACI,QAAMC,OAAO,GAACD,IAAd;;AACA,OAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,IAAI,CAACG,MAAnB,EAA0BD,CAAC,EAA3B,EACA;AACE,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,OAAO,CAACC,CAAD,CAAP,CAAWC,MAAzB,EAAgCC,CAAC,EAAjC,EACA;AACE,UAAIK,IAAI,CAACE,MAAL,EAAD,GAAgB,GAAnB,EACA;AACEV,QAAAA,OAAO,CAACC,CAAD,CAAP,CAAWE,CAAX,EAAcC,MAAd,GAAsB,IAAtB;AACD;AACF;AACF;AAEJ","sourcesContent":["export function createMaze(grid)\r\n    {\r\n        const newGrid=grid\r\n        for(var i=0;i<newGrid.length;(i=i+2))\r\n        {\r\n            for(var j=0;j<newGrid[i].length;j++)\r\n            {\r\n                \r\n                \r\n                    newGrid.isWall=true\r\n                    console.log( newGrid.isWall+' '+i+' '+j)\r\n                    \r\n            \r\n                \r\n            }\r\n            const rand=Math.floor(Math.random()*newGrid[i].length) //generate random num betn 0 and newGrid[i].length\r\n            newGrid.isWall=false\r\n            \r\n        }\r\n        return newGrid\r\n    }\r\n\r\nexport function createMaze1(grid)\r\n{\r\n    const newGrid=grid\r\n    for(var i=0;i<grid.length;i++)\r\n    {\r\n      for(var j=0;j<newGrid[i].length;j++)\r\n      {\r\n        if((Math.random())<0.2)\r\n        {\r\n          newGrid[i][j].isWall= true\r\n        }\r\n      }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}