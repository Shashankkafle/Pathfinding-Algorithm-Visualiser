{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Acer\\\\Pathfinding-Algorithm-Visualiser\\\\Minor_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\Acer\\\\Pathfinding-Algorithm-Visualiser\\\\Minor_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Acer\\\\Pathfinding-Algorithm-Visualiser\\\\Minor_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Acer\\\\Pathfinding-Algorithm-Visualiser\\\\Minor_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Acer\\\\Pathfinding-Algorithm-Visualiser\\\\Minor_project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Component}from'react';import Node from'./Node.jsx';import'./grid.css';import{getAllNodes,getNodesInShortestPathOrder}from'./Algorithms/AlgoTools';import{dijkstra}from'./Algorithms/Dijkstras';import{aStar}from'./Algorithms/Astar';import{generateWall1,generateWall2,generateWall3}from'./obstacles/RandomWalls';import{createMaze}from'./obstacles/Maze';import{unweightedSearchAlgorithm}from'./Algorithms/BFS';import{dfs}from'./Algorithms/DFS';import Table from'react-bootstrap/Table';var Grid=/*#__PURE__*/function(_Component){_inherits(Grid,_Component);var _super=_createSuper(Grid);function Grid(){var _this;_classCallCheck(this,Grid);_this=_super.call(this);_this.state={grid:[],mouseIsPressed:false,currentAlgorithm:[],performance:[],numberOfAlgos:0,disabledStart:true};return _this;}_createClass(Grid,[{key:\"componentDidMount\",value:function componentDidMount(){var grid=getInitialGrid();getAllNodes(grid);this.setState({grid:grid});}},{key:\"handleMouseDown\",value:function handleMouseDown(row,col){var newGrid=getNewGridWithWallToggled(this.state.grid,row,col);this.setState({grid:newGrid,mouseIsPressed:true});}},{key:\"handleMouseEnter\",value:function handleMouseEnter(row,col){if(!this.state.mouseIsPressed)return;var newGrid=getNewGridWithWallToggled(this.state.grid,row,col);this.setState({grid:newGrid});}},{key:\"handleMouseUp\",value:function handleMouseUp(){this.setState({mouseIsPressed:false});}},{key:\"clearGrid\",value:function clearGrid(){var grid=this.state.grid;for(var i=0;i<grid.length;i++){for(var j=0;j<grid[i].length;j++){grid[i][j].isVisited=false;if(!grid[i][j].isStart&&!grid[i][j].isFinish&&!grid[i][j].isWall)document.getElementById(\"node-\".concat(grid[i][j].row,\"-\").concat(grid[i][j].col)).className='node ';}}}},{key:\"clearWalls\",value:function clearWalls(){var grid=this.state.grid;for(var i=0;i<grid.length;i++){for(var j=0;j<grid[i].length;j++){grid[i][j].isVisited=false;grid[i][j].isWall=false;if(!grid[i][j].isStart&&!grid[i][j].isFinish)document.getElementById(\"node-\".concat(grid[i][j].row,\"-\").concat(grid[i][j].col)).className='node ';}}}},{key:\"recordPerofrmence\",value:function recordPerofrmence(algo,time,numberOfVisited,lengthOfSHortestPath){var performance=this.state.performance;var tempPerformance=new Object();tempPerformance.algorithm=algo;tempPerformance.time=time;tempPerformance.shortestPathLength=lengthOfSHortestPath;tempPerformance.numberOfVisitedNodes=numberOfVisited;performance.push(tempPerformance);}},{key:\"displayPerformance\",value:function displayPerformance(){var performance=this.state.performance;var numberOfAlgos=this.state.numberOfAlgos;var colName=document.getElementById('algorithm');var colTime=document.getElementById('time');var colShortestDistance=document.getElementById('distance');var colNumberOfVisited=document.getElementById('visitedNodes');colName.innerHTML='algorithm';colTime.innerHTML='time';colShortestDistance.innerHTML='Shortest Path Length';colNumberOfVisited.innerHTML='Number Of Visited Nodes';var name=[],time=[],shrotestDistance=[],numberOfNodes=[];for(var i=0;i<numberOfAlgos;i++){name[i]=document.getElementById('name'+i);time[i]=document.getElementById('time'+i);shrotestDistance[i]=document.getElementById('distance'+i);numberOfNodes[i]=document.getElementById('visitedNodes'+i);name[i].innerHTML=performance[i].algorithm;;time[i].innerHTML=performance[i].time.toString()+' ms';shrotestDistance[i].innerHTML=performance[i].shortestPathLength.toString();numberOfNodes[i].innerHTML=performance[i].numberOfVisitedNodes.toString();}this.showComparison();if(numberOfAlgos==1){document.getElementById('table').style.marginLeft='500px';document.getElementById('timeList').style.display='none';document.getElementById('spaceList').style.display='none';}if(numberOfAlgos>1){document.getElementById('table').style.marginLeft='120px';document.getElementById('timeList').style.display='block';document.getElementById('spaceList').style.display='block';this.showComparison();}if(numberOfAlgos==4){this.setState({numberOfAlgos:0});}}},{key:\"showComparison\",value:function showComparison(){var performance=this.state.performance;var numberOfAlgos=this.state.numberOfAlgos;var tempPerformance=performance;tempPerformance.sort(function(a,b){return a.time>b.time?1:-1;});document.getElementById('timelist').innerHTML='Algorithms ordered based on time';for(var i=0;i<numberOfAlgos;i++){document.getElementById('timerow'+i).innerHTML=tempPerformance[i].algorithm;}tempPerformance.sort(function(a,b){return a.numberOfVisitedNodes>b.numberOfVisitedNodes?1:-1;});document.getElementById('spacelist').innerHTML='Algorithms ordered based on space';for(var _i=0;_i<numberOfAlgos;_i++){document.getElementById('spacerow'+_i).innerHTML=tempPerformance[_i].algorithm;}}},{key:\"animateAlgorithm\",value:function animateAlgorithm(visitedNodesInOrder,nodesInShortestPathOrder){var _this2=this;var grid=this.state.grid;if(!visitedNodesInOrder.includes(grid[10][35])){alert('No path avilable. Please try again');window.location.reload();}var _loop=function _loop(i){if(i===visitedNodesInOrder.length){setTimeout(function(){_this2.animateShortestPath(nodesInShortestPathOrder);},20*i);return{v:void 0};}setTimeout(function(){var node=visitedNodesInOrder[i];if(!(visitedNodesInOrder[i].isStart||visitedNodesInOrder[i].isFinish)){document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-visited';}},20*i);};for(var i=0;i<=visitedNodesInOrder.length;i++){var _ret=_loop(i);if(typeof _ret===\"object\")return _ret.v;}}},{key:\"animateShortestPath\",value:function animateShortestPath(nodesInShortestPathOrder){var _this3=this;var j=0;var _loop2=function _loop2(i){setTimeout(function(){var node=nodesInShortestPathOrder[i];if(!(nodesInShortestPathOrder[i].isStart||nodesInShortestPathOrder[i].isFinish)){document.getElementById(\"node-\".concat(node.row,\"-\").concat(node.col)).className='node node-shortest-path';}},30*i);j++;};for(var i=0;i<nodesInShortestPathOrder.length;i++){_loop2(i);}setTimeout(function(){_this3.clearGrid();},20*j*2);setTimeout(function(){_this3.startVisualization();},20*j*2);}},{key:\"visualizeDijkstra\",value:function visualizeDijkstra(){var grid=this.state.grid;var startNode=grid[10][15];var finishNode=grid[10][35];var t0=performance.now();var visitedNodesInOrder=dijkstra(grid,startNode,finishNode);var t1=performance.now();var nodesInShortestPathOrder=getNodesInShortestPathOrder(finishNode);this.animateAlgorithm(visitedNodesInOrder,nodesInShortestPathOrder);this.recordPerofrmence('dijkstras',t1-t0,visitedNodesInOrder.length,nodesInShortestPathOrder.length);}},{key:\"visualizeAstar\",value:function visualizeAstar(){var grid=this.state.grid;var startNode=grid[10][15];var finishNode=grid[10][35];var t0=performance.now();var visitedNodesInOrder=aStar(grid,startNode,finishNode);var t1=performance.now();var nodesInShortestPathOrder=getNodesInShortestPathOrder(finishNode);this.animateAlgorithm(visitedNodesInOrder,nodesInShortestPathOrder);this.recordPerofrmence('astar',t1-t0,visitedNodesInOrder.length,nodesInShortestPathOrder.length);}},{key:\"visualizeBfs\",value:function visualizeBfs(){var grid=this.state.grid;var startNode=grid[10][15];var finishNode=grid[10][35];var t0=performance.now();var visitedNodesInOrder=unweightedSearchAlgorithm(grid,startNode,finishNode);var t1=performance.now();var nodesInShortestPathOrder=getNodesInShortestPathOrder(finishNode);this.animateAlgorithm(visitedNodesInOrder,nodesInShortestPathOrder);this.recordPerofrmence('bfs',t1-t0,visitedNodesInOrder.length,nodesInShortestPathOrder.length);}},{key:\"visualizeDfs\",value:function visualizeDfs(){var grid=this.state.grid;var startNode=grid[10][15];var finishNode=grid[10][35];var t0=performance.now();var visitedNodesInOrder=dfs(grid,startNode,finishNode);var t1=performance.now();var nodesInShortestPathOrder=getNodesInShortestPathOrder(finishNode);this.animateAlgorithm(visitedNodesInOrder,nodesInShortestPathOrder);this.recordPerofrmence('dfs',t1-t0,visitedNodesInOrder.length,nodesInShortestPathOrder.length);}},{key:\"selectionfunction\",value:function selectionfunction(algo){var currentAlgorithm=this.state.currentAlgorithm;var numberOfAlgos=this.state.numberOfAlgos;if(!currentAlgorithm.includes(algo)){currentAlgorithm.push(algo);this.setState({numberOfAlgos:numberOfAlgos+1});this.setState({disabledStart:false});}}},{key:\"startVisualization\",value:function startVisualization(){var currentAlgorithm=this.state.currentAlgorithm;var numberOfAlgos=this.state.numberOfAlgos;var algo=currentAlgorithm.pop();this.setState({disabledStart:true});var currentAlgo=document.getElementById('currentAlgo');if(algo!=undefined){currentAlgo.innerHTML='Current Algorithm: '+' '+algo;}else{currentAlgo.innerHTML='';}if(algo=='dijsktras'){this.visualizeDijkstra();}if(algo=='astar'){this.visualizeAstar();}if(algo=='bfs'){this.visualizeBfs();}if(algo=='dfs'){this.visualizeDfs();}if(currentAlgorithm.length===0){document.getElementById('table').style.display='inline-table';document.getElementById('timeList').style.display='block';document.getElementById('spaceList').style.display='block';this.displayPerformance();}}},{key:\"render\",value:function render(){var _this4=this;var _this$state=this.state,grid=_this$state.grid,mouseIsPressed=_this$state.mouseIsPressed;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"navBar\"},/*#__PURE__*/React.createElement(\"a\",{href:\"http://localhost:3000/\",className:\"onlyLeft\"},\"  \",/*#__PURE__*/React.createElement(\"b\",null,\" Pathfinding Visualizer \")),/*#__PURE__*/React.createElement(\"a\",null,\"  \",/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this4.startVisualization();},className:\"newTools\",disabled:this.state.disabledStart},\" \",/*#__PURE__*/React.createElement(\"b\",null,\"Visualize!\"),\" \")),/*#__PURE__*/React.createElement(\"div\",{className:\"dropDown\"},/*#__PURE__*/React.createElement(\"label\",{className:\"dropBtn\"},/*#__PURE__*/React.createElement(\"b\",null,\" Algorithms \")),/*#__PURE__*/React.createElement(\"select\",{className:\"dropdown-algo\",id:\"dropdown-algo\",multiple:true},/*#__PURE__*/React.createElement(\"option\",{onClick:function onClick(){return _this4.selectionfunction('dijsktras');},id:\"dijsktras\",className:\"algoBar\"},\" Dijkstra's algorithm \"),/*#__PURE__*/React.createElement(\"option\",{onClick:function onClick(){return _this4.selectionfunction('astar');},id:\"astar\",className:\"algoBar\"},\"  Astar algorithm  \"),/*#__PURE__*/React.createElement(\"option\",{onClick:function onClick(){return _this4.selectionfunction('bfs');},id:\"bfs\",className:\"algoBar\"},\"  Bfs algorithm  \"),/*#__PURE__*/React.createElement(\"option\",{onClick:function onClick(){return _this4.selectionfunction('dfs');},id:\"dfs\",className:\"algoBar\"},\"  Dfs algorithm   \"))),/*#__PURE__*/React.createElement(\"div\",{className:\"wall\"},/*#__PURE__*/React.createElement(\"a\",{className:\"dropWall\"},/*#__PURE__*/React.createElement(\"b\",null,\" Wall \"),\" \"),/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown-wall\"},/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){var grid=_this4.state.grid;var newGrid=generateWall1(grid);_this4.setState({grid:newGrid});}},\"  \",/*#__PURE__*/React.createElement(\"a\",null,\" Level 1\"),\" \"),/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){var grid=_this4.state.grid;var newGrid=generateWall2(grid);_this4.setState({grid:newGrid});}},\"  \",/*#__PURE__*/React.createElement(\"a\",null,\" Level 2\"),\" \"),/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){var grid=_this4.state.grid;var newGrid=generateWall3(grid);_this4.setState({grid:newGrid});}},\"  \",/*#__PURE__*/React.createElement(\"a\",null,\" Level 3\"),\" \"),/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){var grid=_this4.state.grid;var newGrid=createMaze(grid);_this4.setState({grid:newGrid});}},\"  \",/*#__PURE__*/React.createElement(\"a\",null,\" Generate Maze\"),\" \"))),/*#__PURE__*/React.createElement(\"a\",{href:\"http://localhost:3000/\"},\" \",/*#__PURE__*/React.createElement(\"b\",null,\" Reset\"))),/*#__PURE__*/React.createElement(\"div\",{id:\"analysisContainer\"},/*#__PURE__*/React.createElement(\"div\",{id:\"tableContainer\"},/*#__PURE__*/React.createElement(Table,{id:\"table\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",{id:\"algorithm\"}),/*#__PURE__*/React.createElement(\"th\",{id:\"time\"}),/*#__PURE__*/React.createElement(\"th\",{id:\"distance\"}),/*#__PURE__*/React.createElement(\"th\",{id:\"visitedNodes\"}))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{id:\"name0\"}),/*#__PURE__*/React.createElement(\"td\",{id:\"time0\"}),/*#__PURE__*/React.createElement(\"td\",{id:\"distance0\"}),/*#__PURE__*/React.createElement(\"td\",{id:\"visitedNodes0\"})),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{id:\"name1\"}),/*#__PURE__*/React.createElement(\"td\",{id:\"time1\"}),/*#__PURE__*/React.createElement(\"td\",{id:\"distance1\"}),/*#__PURE__*/React.createElement(\"td\",{id:\"visitedNodes1\"})),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{id:\"name2\"}),/*#__PURE__*/React.createElement(\"td\",{id:\"time2\"}),/*#__PURE__*/React.createElement(\"td\",{id:\"distance2\"}),/*#__PURE__*/React.createElement(\"td\",{id:\"visitedNodes2\"})),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{id:\"name3\"}),/*#__PURE__*/React.createElement(\"td\",{id:\"time3\"}),/*#__PURE__*/React.createElement(\"td\",{id:\"distance3\"}),/*#__PURE__*/React.createElement(\"td\",{id:\"visitedNodes3\"}))))),/*#__PURE__*/React.createElement(\"div\",{id:\"listContainer1\"},/*#__PURE__*/React.createElement(\"ul\",{id:\"timeList\"},/*#__PURE__*/React.createElement(\"a\",{id:\"timelist\"}),/*#__PURE__*/React.createElement(\"li\",{id:\"timerow0\"}),/*#__PURE__*/React.createElement(\"li\",{id:\"timerow1\"}),/*#__PURE__*/React.createElement(\"li\",{id:\"timerow2\"}),/*#__PURE__*/React.createElement(\"li\",{id:\"timerow3\"}))),/*#__PURE__*/React.createElement(\"div\",{id:\"listContainer2\"},/*#__PURE__*/React.createElement(\"ul\",{id:\"spaceList\"},/*#__PURE__*/React.createElement(\"a\",{id:\"spacelist\"}),/*#__PURE__*/React.createElement(\"li\",{id:\"spacerow0\"}),/*#__PURE__*/React.createElement(\"li\",{id:\"spacerow1\"}),/*#__PURE__*/React.createElement(\"li\",{id:\"spacerow2\"}),/*#__PURE__*/React.createElement(\"li\",{id:\"spacerow3\"})))),/*#__PURE__*/React.createElement(\"div\",{id:\"currentAlgo\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"grid\"},grid.map(function(row,rowIdx){return/*#__PURE__*/React.createElement(\"div\",{key:rowIdx},row.map(function(node,nodeIdx){var row=node.row,col=node.col,isFinish=node.isFinish,isStart=node.isStart,isWall=node.isWall;return/*#__PURE__*/React.createElement(Node,{key:nodeIdx,col:col,isFinish:isFinish,isStart:isStart,isWall:isWall,mouseIsPressed:mouseIsPressed,onMouseDown:function onMouseDown(row,col){return _this4.handleMouseDown(row,col);},onMouseEnter:function onMouseEnter(row,col){return _this4.handleMouseEnter(row,col);},onMouseUp:function onMouseUp(){return _this4.handleMouseUp();},row:row});}));})));}}]);return Grid;}(Component);export{Grid as default};;var getInitialGrid=function getInitialGrid(){var grid=[];for(var row=0;row<20;row++){var temp=[];for(var col=0;col<50;col++){temp.push(createNode(col,row));}grid.push(temp);}return grid;};var createNode=function createNode(col,row){return{col:col,row:row,isStart:row===10&&col===15,isFinish:row===10&&col===35,distance:Infinity,isVisited:false,isWall:false,previousNode:null};};var getNewGridWithWallToggled=function getNewGridWithWallToggled(grid,row,col){var newGrid=grid.slice();var node=newGrid[row][col];var newNode=_objectSpread(_objectSpread({},node),{},{isWall:!node.isWall});newGrid[row][col]=newNode;return newGrid;};","map":{"version":3,"sources":["C:/Users/Acer/Pathfinding-Algorithm-Visualiser/minor_project/src/Grid.jsx"],"names":["React","Component","Node","getAllNodes","getNodesInShortestPathOrder","dijkstra","aStar","generateWall1","generateWall2","generateWall3","createMaze","unweightedSearchAlgorithm","dfs","Table","Grid","state","grid","mouseIsPressed","currentAlgorithm","performance","numberOfAlgos","disabledStart","getInitialGrid","setState","row","col","newGrid","getNewGridWithWallToggled","i","length","j","isVisited","isStart","isFinish","isWall","document","getElementById","className","algo","time","numberOfVisited","lengthOfSHortestPath","tempPerformance","Object","algorithm","shortestPathLength","numberOfVisitedNodes","push","colName","colTime","colShortestDistance","colNumberOfVisited","innerHTML","name","shrotestDistance","numberOfNodes","toString","showComparison","style","marginLeft","display","sort","a","b","visitedNodesInOrder","nodesInShortestPathOrder","includes","alert","window","location","reload","setTimeout","animateShortestPath","node","clearGrid","startVisualization","startNode","finishNode","t0","now","t1","animateAlgorithm","recordPerofrmence","pop","currentAlgo","undefined","visualizeDijkstra","visualizeAstar","visualizeBfs","visualizeDfs","displayPerformance","selectionfunction","map","rowIdx","nodeIdx","handleMouseDown","handleMouseEnter","handleMouseUp","temp","createNode","distance","Infinity","previousNode","slice","newNode"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Component } from 'react'\r\nimport Node from './Node.jsx'\r\nimport './grid.css'\r\nimport {getAllNodes, getNodesInShortestPathOrder} from './Algorithms/AlgoTools'\r\nimport {dijkstra} from './Algorithms/Dijkstras';\r\nimport {aStar} from './Algorithms/Astar';\r\nimport {generateWall1,generateWall2,generateWall3} from './obstacles/RandomWalls'\r\nimport {createMaze} from './obstacles/Maze'\r\nimport {unweightedSearchAlgorithm} from './Algorithms/BFS';\r\nimport {dfs} from './Algorithms/DFS';\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nexport default class Grid extends Component\r\n{\r\n  constructor() \r\n    {\r\n        super();\r\n        this.state = {\r\n          grid: [],\r\n          mouseIsPressed: false,\r\n          currentAlgorithm: [],\r\n          performance:[],\r\n          numberOfAlgos:0,\r\n          disabledStart:true,\r\n        };\r\n    } \r\n   \r\n   \r\n  componentDidMount() {\r\n    const grid = getInitialGrid();\r\n    getAllNodes(grid)\r\n    this.setState({grid});\r\n  }\r\n    \r\n  \r\n  handleMouseDown(row, col) {\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({grid: newGrid, mouseIsPressed: true});\r\n  }\r\n\r\n  handleMouseEnter(row, col) {\r\n    if (!this.state.mouseIsPressed) return;\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({grid: newGrid});\r\n  }\r\n\r\n  handleMouseUp() {\r\n    this.setState({mouseIsPressed: false});\r\n  }\r\n\r\n  clearGrid(){ \r\n    const {grid}=this.state    \r\n    for(var i=0;i<grid.length;i++){\r\n      for(var j=0;j<grid[i].length;j++){\r\n            \r\n        grid[i][j].isVisited=false\r\n        if((!grid[i][j].isStart)&&(!grid[i][j].isFinish)&&(!grid[i][j].isWall))\r\n        document.getElementById(`node-${grid[i][j].row}-${grid[i][j].col}`).className =\r\n        'node ';\r\n      }\r\n    }\r\n  }\r\n\r\n  clearWalls(){ \r\n    const {grid}=this.state    \r\n    for(var i=0;i<grid.length;i++){\r\n      for(var j=0;j<grid[i].length;j++){\r\n            \r\n        grid[i][j].isVisited=false\r\n        grid[i][j].isWall=false\r\n        if((!grid[i][j].isStart)&&(!grid[i][j].isFinish))\r\n        document.getElementById(`node-${grid[i][j].row}-${grid[i][j].col}`).className =\r\n        'node ';\r\n      }\r\n    }\r\n  }\r\n\r\n  recordPerofrmence(algo,time,numberOfVisited,lengthOfSHortestPath){\r\n    const {performance}=this.state;\r\n    var tempPerformance = new Object();\r\n    tempPerformance.algorithm=algo;\r\n    tempPerformance.time=time;\r\n    tempPerformance.shortestPathLength=lengthOfSHortestPath;\r\n    tempPerformance.numberOfVisitedNodes=numberOfVisited;\r\n    performance.push(tempPerformance);\r\n   \r\n  }\r\n\r\n  displayPerformance(){\r\n    \r\n    const {performance} = this.state;\r\n    const {numberOfAlgos}= this.state\r\n    var colName=document.getElementById('algorithm')\r\n    var colTime=document.getElementById('time')\r\n    var colShortestDistance = document.getElementById('distance')\r\n    var colNumberOfVisited= document.getElementById('visitedNodes')\r\n    colName.innerHTML= 'algorithm' ;\r\n    colTime.innerHTML= 'time';\r\n    colShortestDistance.innerHTML = 'Shortest Path Length'\r\n    colNumberOfVisited.innerHTML='Number Of Visited Nodes'\r\n    var name=[],time=[],shrotestDistance=[],numberOfNodes=[];\r\n    \r\n    for(let i=0;i<numberOfAlgos;i++){\r\n      name[i]=document.getElementById('name'+i)\r\n      time[i]=document.getElementById('time'+i)\r\n      shrotestDistance[i]= document.getElementById('distance'+i)\r\n      numberOfNodes[i]=document.getElementById('visitedNodes'+i)\r\n      name[i].innerHTML= performance[i].algorithm;;\r\n      time[i].innerHTML= performance[i].time.toString() +' ms';\r\n      shrotestDistance[i].innerHTML =  performance[i].shortestPathLength.toString();\r\n      numberOfNodes[i].innerHTML=performance[i].numberOfVisitedNodes.toString()\r\n    }\r\n    this.showComparison();\r\n\r\n    if (numberOfAlgos==1){\r\n      document.getElementById('table').style.marginLeft = '500px';\r\n      document.getElementById('timeList').style.display = 'none';\r\n      document.getElementById('spaceList').style.display = 'none';\r\n    }\r\n\r\n    if (numberOfAlgos > 1){\r\n      document.getElementById('table').style.marginLeft = '120px';\r\n      document.getElementById('timeList').style.display = 'block';\r\n      document.getElementById('spaceList').style.display = 'block';\r\n      this.showComparison();\r\n    }\r\n    \r\n    if(numberOfAlgos==4){\r\n      \r\n      this.setState({\r\n        numberOfAlgos:0\r\n      })\r\n    }\r\n  }\r\n\r\n  showComparison(){\r\n    const {performance} = this.state;\r\n    const {numberOfAlgos} = this.state;\r\n    var tempPerformance=performance;\r\n    tempPerformance.sort((a,b)=>{\r\n      return(a.time>b.time) ? 1:-1\r\n    })\r\n\r\n    document.getElementById('timelist').innerHTML='Algorithms ordered based on time' \r\n\r\n    for(let i=0;i<numberOfAlgos;i++){\r\n     document.getElementById('timerow'+i).innerHTML=tempPerformance[i].algorithm;    \r\n    }\r\n    \r\n    tempPerformance.sort((a,b)=>{\r\n      return(a.numberOfVisitedNodes>b.numberOfVisitedNodes) ? 1:-1\r\n    })\r\n    \r\n    document.getElementById('spacelist').innerHTML='Algorithms ordered based on space';\r\n\r\n    for(let i=0;i<numberOfAlgos;i++){\r\n      document.getElementById('spacerow'+i).innerHTML=tempPerformance[i].algorithm;     \r\n    }   \r\n  }\r\n \r\n  animateAlgorithm(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n    const {grid} = this.state\r\n    if(!visitedNodesInOrder.includes(grid[10][35])){\r\n      alert('No path avilable. Please try again')\r\n     window.location.reload()\r\n    }\r\n    for (let i=0; i <= visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          this.animateShortestPath(nodesInShortestPathOrder);\r\n        }, 20 * i);\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i];\r\n        if(!(visitedNodesInOrder[i].isStart||visitedNodesInOrder[i].isFinish))\r\n        {\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n          'node node-visited';\r\n        }\r\n      }, 20 * i);\r\n    }\r\n  }\r\n\r\n  animateShortestPath(nodesInShortestPathOrder) {\r\n    let j = 0\r\n    for (let i=0; i < nodesInShortestPathOrder.length; i++) \r\n    {\r\n      setTimeout(() => {\r\n        const node = nodesInShortestPathOrder[i];\r\n        if(!(nodesInShortestPathOrder[i].isStart||nodesInShortestPathOrder[i].isFinish))\r\n        {\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n          'node node-shortest-path';\r\n        } \r\n      }, 30 * i);\r\n      j++;\r\n    }\r\n    setTimeout(() => {\r\n     this.clearGrid()\r\n    }, 20 * j * 2);\r\n    setTimeout(() => {\r\n      this.startVisualization()\r\n        }, 20 * j * 2);\r\n    \r\n  }\r\n\r\n  visualizeDijkstra() {\r\n    const {grid} = this.state;\r\n    const startNode = grid[10][15];\r\n    const finishNode = grid[10][35];\r\n    var t0=performance.now()\r\n    const visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\r\n    var t1=performance.now()\r\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n    this.animateAlgorithm(visitedNodesInOrder, nodesInShortestPathOrder);\r\n    this.recordPerofrmence('dijkstras',t1-t0,visitedNodesInOrder.length,nodesInShortestPathOrder.length)\r\n  }\r\n\r\n  visualizeAstar() {\r\n    const {grid} = this.state;\r\n    const startNode = grid[10][15];\r\n    const finishNode = grid[10][35];\r\n    var t0=performance.now()\r\n    const visitedNodesInOrder = aStar(grid, startNode, finishNode);\r\n    var t1=performance.now()\r\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n    this.animateAlgorithm(visitedNodesInOrder, nodesInShortestPathOrder);\r\n    this.recordPerofrmence('astar',t1-t0,visitedNodesInOrder.length,nodesInShortestPathOrder.length)\r\n  }\r\n\r\n\r\n  visualizeBfs() { \r\n    const {grid} = this.state;\r\n    const startNode = grid[10][15];\r\n    const finishNode = grid[10][35];\r\n    var t0=performance.now()\r\n    const visitedNodesInOrder =  unweightedSearchAlgorithm(grid, startNode, finishNode);\r\n    var t1=performance.now()\r\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n    this.animateAlgorithm(visitedNodesInOrder, nodesInShortestPathOrder);  \r\n    this.recordPerofrmence('bfs',t1-t0,visitedNodesInOrder.length,nodesInShortestPathOrder.length)\r\n  }\r\n\r\n  visualizeDfs() {\r\n    const {grid} = this.state;\r\n    const startNode = grid[10][15];\r\n    const finishNode = grid[10][35];\r\n    var t0=performance.now()\r\n    const visitedNodesInOrder =  dfs(grid, startNode, finishNode);\r\n    var t1=performance.now()\r\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n    this.animateAlgorithm(visitedNodesInOrder, nodesInShortestPathOrder);  \r\n    this.recordPerofrmence('dfs',t1-t0,visitedNodesInOrder.length,nodesInShortestPathOrder.length)\r\n  }\r\n\r\n  selectionfunction(algo){\r\n    const {currentAlgorithm}= this.state\r\n    const {numberOfAlgos}= this.state\r\n    if(!currentAlgorithm.includes(algo)){\r\n    currentAlgorithm.push(algo)\r\n    this.setState({\r\n      numberOfAlgos:numberOfAlgos+1\r\n    })\r\n    this.setState({\r\n      disabledStart:false\r\n    })\r\n   }\r\n  }\r\n\r\n  startVisualization(){\r\n      const {currentAlgorithm}= this.state\r\n      const {numberOfAlgos}= this.state\r\n      var algo=currentAlgorithm.pop()\r\n      this.setState({\r\n        disabledStart:true\r\n      })\r\n     var currentAlgo= document.getElementById('currentAlgo');\r\n     if(algo!=undefined){\r\n     currentAlgo.innerHTML= 'Current Algorithm: '+ ' ' + algo;\r\n     }\r\n     else{\r\n      currentAlgo.innerHTML=''\r\n     }\r\n      if(algo=='dijsktras'){\r\n        \r\n        this.visualizeDijkstra()        \r\n      }\r\n      if(algo=='astar'){\r\n       \r\n        this.visualizeAstar()\r\n      }\r\n      if(algo=='bfs'){\r\n        this.visualizeBfs()\r\n      }\r\n\r\n      if(algo=='dfs'){\r\n        this.visualizeDfs()\r\n      }\r\n      if(currentAlgorithm.length === 0){\r\n\r\n        document.getElementById('table').style.display = 'inline-table';\r\n        document.getElementById('timeList').style.display = 'block';\r\n        document.getElementById('spaceList').style.display = 'block';\r\n\r\n        this.displayPerformance();\r\n      }\r\n  }\r\n\r\n  render() {\r\n    \r\n    const {grid, mouseIsPressed} = this.state;\r\n    \r\n    return (\r\n      <>\r\n      <div className=\"navBar\">\r\n        <a href=\"http://localhost:3000/\" className='onlyLeft'>  <b> Pathfinding Visualizer </b></a>\r\n        <a>  <button  onClick={()=>this.startVisualization()}className=\"newTools\" disabled={this.state.disabledStart}> <b>Visualize!</b> </button></a>\r\n\t      <div className=\"dropDown\"> \r\n          <label className=\"dropBtn\"><b> Algorithms </b></label>\r\n          <select className=\"dropdown-algo\" id=\"dropdown-algo\" multiple >\r\n          <option onClick={()=>this.selectionfunction('dijsktras')} id='dijsktras' className=\"algoBar\"> Dijkstra's algorithm </option> \r\n          <option  onClick={()=>this.selectionfunction('astar')} id='astar' className=\"algoBar\">  Astar algorithm  </option>\r\n          <option  onClick={()=>this.selectionfunction('bfs') }id='bfs' className=\"algoBar\">  Bfs algorithm  </option>\r\n          <option  onClick={()=>this.selectionfunction('dfs')} id='dfs'className=\"algoBar\" >  Dfs algorithm   </option>\r\n          </select> \r\n        </div>\r\n\r\n        <div className=\"wall\"> \r\n          <a className=\"dropWall\"><b> Wall </b> </a>\r\n          <div className=\"dropdown-wall\">\r\n            <a onClick=\r\n                        {() => \r\n                              { const {grid} = this.state;\r\n                                const newGrid=generateWall1(grid)\r\n                                this.setState({grid: newGrid})\r\n                              }\r\n                        }\r\n            >  <a> Level 1</a> </a> \r\n           <a onClick=\r\n                        {() => \r\n                              {\r\n                                const {grid} = this.state;\r\n                                const newGrid=generateWall2(grid)\r\n                                this.setState({grid: newGrid})\r\n                              }\r\n                        }\r\n            >  <a> Level 2</a> </a> \r\n           <a onClick=\r\n                        {() => \r\n                              {\r\n                                const {grid} = this.state;\r\n                                const newGrid=generateWall3(grid)\r\n                                this.setState({grid: newGrid})\r\n                              }\r\n                        }\r\n            >  <a> Level 3</a> </a> \r\n            <a onClick=\r\n              {()=>\r\n                  {const {grid} = this.state;\r\n                  const newGrid=createMaze(grid)\r\n                  this.setState({grid: newGrid})\r\n                  \r\n                  }\r\n              }\r\n            >  <a> Generate Maze</a> </a>\r\n          </div> \r\n        </div>\r\n       <a href=\"http://localhost:3000/\"> <b> Reset</b></a>\r\n      </div>\r\n\r\n      <div id='analysisContainer'>\r\n        <div id='tableContainer'>\r\n          <Table id='table'>\r\n              <thead>\r\n                <tr>\r\n                  <th id='algorithm'></th>\r\n                  <th id='time'></th>\r\n                  <th id='distance'></th>\r\n                  <th id='visitedNodes'></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td id='name0'></td>\r\n                  <td id='time0'></td>\r\n                  <td id='distance0'></td>\r\n                  <td id='visitedNodes0'></td>\r\n                </tr>\r\n                <tr>\r\n                  <td id='name1'></td>\r\n                  <td id='time1'></td>\r\n                  <td id='distance1'></td>\r\n                  <td id='visitedNodes1'></td>\r\n                </tr>\r\n                <tr>\r\n                  <td id='name2'></td>\r\n                  <td id='time2'></td>\r\n                  <td id='distance2'></td>\r\n                  <td id='visitedNodes2'></td>\r\n                </tr>\r\n                <tr>\r\n                  <td id='name3'></td>\r\n                  <td id='time3'></td>\r\n                  <td id='distance3'></td>\r\n                  <td id='visitedNodes3'></td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n        </div>\r\n            \r\n        <div id='listContainer1'>\r\n            <ul id='timeList' > \r\n            <a  id='timelist'></a>\r\n            <li id='timerow0'></li>\r\n            <li id='timerow1'></li>\r\n            <li id='timerow2'></li>\r\n            <li id='timerow3'></li>\r\n            </ul> \r\n        </div>\r\n          \r\n        <div id='listContainer2'>\r\n          <ul id='spaceList'> \r\n          <a  id='spacelist'></a>\r\n          <li id='spacerow0'></li>\r\n          <li id='spacerow1'></li>\r\n          <li id='spacerow2'></li>\r\n          <li id='spacerow3'></li>\r\n          </ul> \r\n        </div>\r\n     \r\n      </div> \r\n\r\n      <div id='currentAlgo'></div>\r\n\r\n\r\n      <div className=\"grid\"> \r\n        {grid.map((row, rowIdx) => { \r\n          return (\r\n            <div key={rowIdx}>\r\n              {row.map((node, nodeIdx) => {\r\n                const {row, col, isFinish, isStart, isWall} = node;\r\n                return (\r\n                  <Node\r\n                    key={nodeIdx}\r\n                    col={col}\r\n                    isFinish={isFinish}\r\n                    isStart={isStart}\r\n                    isWall={isWall}\r\n                    mouseIsPressed={mouseIsPressed}\r\n                    onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                    onMouseEnter={(row, col) =>\r\n                      this.handleMouseEnter(row, col)\r\n                    }\r\n                    onMouseUp={() => this.handleMouseUp()}\r\n                    row={row}></Node>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </> \r\n    );     \r\n  }\r\n};\r\n\r\nconst getInitialGrid = () => {\r\n  \r\n  const grid = []\r\n  for (let row = 0; row < 20; row++) {\r\n    const temp = [];\r\n    for (let col = 0; col < 50; col++) {\r\n      temp.push(createNode(col, row));\r\n    }\r\n    grid.push(temp);\r\n  }\r\n  return grid;\r\n};\r\n\r\nconst createNode = (col, row) => {\r\n  return {\r\n    col,\r\n    row,\r\n    isStart: row === 10 && col === 15,\r\n    isFinish: row === 10&& col === 35,\r\n    distance: Infinity,\r\n    isVisited: false,\r\n    isWall: false,\r\n    previousNode: null,\r\n  };\r\n};\r\n\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n    ...node,\r\n    isWall: !node.isWall,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}