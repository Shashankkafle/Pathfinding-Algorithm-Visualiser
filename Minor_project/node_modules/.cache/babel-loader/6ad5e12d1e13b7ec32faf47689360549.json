{"ast":null,"code":"export function bfs(startNode, FinsihNode) {\n  const queue = [];\n  startNode.isvisited = true;\n  queue.push(startNode);\n\n  while (queue.length > 0) {\n    let current = queue.shift();\n\n    if (current == FinsihNode) {\n      console.log('found');\n    }\n\n    var edges = current.edges;\n\n    for (let i = 0; i < edges.length; i++) {\n      var neighbor = edges[i];\n\n      if (!neighbor.isvisited) {\n        neighbor.isvisited = true;\n        neighbor.previousNode = current;\n        queue.push(neighbor);\n      }\n    }\n  }\n}","map":{"version":3,"sources":["E:/minor project/Pathfinding-Algorithm-visualiser/Minor_project/src/Algorithms/BFS.jsx"],"names":["bfs","startNode","FinsihNode","queue","isvisited","push","length","current","shift","console","log","edges","i","neighbor","previousNode"],"mappings":"AAAA,OAAO,SAASA,GAAT,CAAaC,SAAb,EAAuBC,UAAvB,EAAmC;AAExC,QAAMC,KAAK,GAAG,EAAd;AACAF,EAAAA,SAAS,CAACG,SAAV,GAAsB,IAAtB;AACAD,EAAAA,KAAK,CAACE,IAAN,CAAWJ,SAAX;;AAEA,SAAME,KAAK,CAACG,MAAN,GAAe,CAArB,EAAwB;AACtB,QAAIC,OAAO,GAAGJ,KAAK,CAACK,KAAN,EAAd;;AACA,QAAGD,OAAO,IAAIL,UAAd,EAA0B;AACxBO,MAAAA,OAAO,CAACC,GAAR,CAAa,OAAb;AACD;;AAED,QAAIC,KAAK,GAAGJ,OAAO,CAACI,KAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACL,MAA1B,EAAkCM,CAAC,EAAnC,EAAsC;AACpC,UAAIC,QAAQ,GAAGF,KAAK,CAAEC,CAAF,CAApB;;AACA,UAAG,CAACC,QAAQ,CAACT,SAAb,EAAwB;AACtBS,QAAAA,QAAQ,CAACT,SAAT,GAAqB,IAArB;AACAS,QAAAA,QAAQ,CAACC,YAAT,GAAwBP,OAAxB;AACAJ,QAAAA,KAAK,CAACE,IAAN,CAAWQ,QAAX;AACD;AACF;AACF;AACF","sourcesContent":["export function bfs(startNode,FinsihNode) {\r\n\r\n  const queue = [];\r\n  startNode.isvisited = true;\r\n  queue.push(startNode);\r\n\r\n  while(queue.length > 0) {\r\n    let current = queue.shift();\r\n    if(current == FinsihNode) {\r\n      console.log ('found');\r\n    }\r\n\r\n    var edges = current.edges;\r\n    for (let i = 0; i < edges.length; i++){\r\n      var neighbor = edges [i];\r\n      if(!neighbor.isvisited) {\r\n        neighbor.isvisited = true;\r\n        neighbor.previousNode = current;\r\n        queue.push(neighbor);\r\n      }\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}