{"ast":null,"code":"export function unweightedSearchAlgorithm(grid,startNode,finishNode){var queue=[];var visitedNodesInOrder=[];startNode.isVisited=true;queue.push(startNode);while(queue.length>0){var node=queue.shift();if(finishNode===node)return visitedNodesInOrder;if(node.isWall)continue;var neighbors=getUnvisitedNeighbors(grid,node);for(var i=0;i<neighbors.length;i++){var neighbor=neighbors[i];neighbor.isVisited=true;neighbor.previousNode=node;visitedNodesInOrder.push(neighbor);queue.push(neighbor);}}return visitedNodesInOrder;}function getUnvisitedNeighbors(grid,node){var ROWS=grid.length;var COLS=grid[0].length;var row=node.row,col=node.col;var neighbors=[];if(row+1>=0&&row+1<ROWS&&col>=0&&col<COLS&&!grid[row+1][col].isVisited&&!grid[row+1][col].isWall){neighbors.push(grid[row+1][col]);}if(row-1>=0&&row-1<ROWS&&col>=0&&col<COLS&&!grid[row-1][col].isWall&&!grid[row-1][col].isVisited){neighbors.push(grid[row-1][col]);}if(row>=0&&row<ROWS&&col-1>=0&&col-1<COLS&&!grid[row][col-1].isWall&&!grid[row][col-1].isVisited){neighbors.push(grid[row][col-1]);}if(row>=0&&row<ROWS&&col+1>=0&&col+1<COLS&&!grid[row][col+1].isWall&&!grid[row][col+1].isVisited){neighbors.push(grid[row][col+1]);}return neighbors;}","map":{"version":3,"sources":["C:/Users/Acer/Pathfinding-Algorithm-Visualiser/minor_project/src/Algorithms/BFS.jsx"],"names":["unweightedSearchAlgorithm","grid","startNode","finishNode","queue","visitedNodesInOrder","isVisited","push","length","node","shift","isWall","neighbors","getUnvisitedNeighbors","i","neighbor","previousNode","ROWS","COLS","row","col"],"mappings":"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","sourcesContent":["\r\nexport function unweightedSearchAlgorithm(grid, startNode, finishNode) {\r\n  const queue = [];\r\n  const visitedNodesInOrder = [];\r\n\r\n  startNode.isVisited = true;\r\n  queue.push(startNode);\r\n\r\n  while (queue.length > 0) {\r\n      let node = queue.shift();\r\n\r\n      if (finishNode === node)\r\n          return visitedNodesInOrder;\r\n\r\n      if (node.isWall) continue;\r\n\r\n      const neighbors = getUnvisitedNeighbors(grid, node);\r\n\r\n      for (let i = 0; i < neighbors.length; i++) {\r\n          let neighbor = neighbors[i];\r\n          neighbor.isVisited = true;\r\n          neighbor.previousNode = node;\r\n          visitedNodesInOrder.push(neighbor);\r\n          queue.push(neighbor);\r\n      }\r\n  }\r\n\r\n  return visitedNodesInOrder;\r\n}\r\n\r\nfunction  getUnvisitedNeighbors(grid, node) {\r\n  const ROWS = grid.length;\r\n  const COLS = grid[0].length;\r\n\r\n  const { row, col } = node;\r\n  const neighbors = [];\r\n\r\n  if (\r\n      row + 1 >= 0 &&\r\n      row + 1 < ROWS &&\r\n      col >= 0 &&\r\n      col < COLS &&\r\n      !grid[row + 1][col].isVisited &&\r\n      !grid[row + 1][col].isWall\r\n  ) {\r\n      neighbors.push(grid[row + 1][col]);\r\n  }\r\n  if (\r\n      row - 1 >= 0 &&\r\n      row - 1 < ROWS &&\r\n      col >= 0 &&\r\n      col < COLS &&\r\n      !grid[row - 1][col].isWall &&\r\n      !grid[row - 1][col].isVisited\r\n  ) {\r\n      neighbors.push(grid[row - 1][col]);\r\n  }\r\n  if (\r\n      row >= 0 &&\r\n      row < ROWS &&\r\n      col - 1 >= 0 &&\r\n      col - 1 < COLS &&\r\n      !grid[row][col - 1].isWall &&\r\n      !grid[row][col - 1].isVisited\r\n  ) {\r\n      neighbors.push(grid[row][col - 1]);\r\n  }\r\n  if (\r\n      row >= 0 &&\r\n      row < ROWS &&\r\n      col + 1 >= 0 &&\r\n      col + 1 < COLS &&\r\n      !grid[row][col + 1].isWall &&\r\n      !grid[row][col + 1].isVisited\r\n  ) {\r\n      neighbors.push(grid[row][col + 1]);\r\n  }\r\n\r\n  return neighbors;\r\n}"]},"metadata":{},"sourceType":"module"}